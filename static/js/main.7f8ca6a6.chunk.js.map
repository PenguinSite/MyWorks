{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.js","components/Ui/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswerList/AnswerList.js","components/ActiveQuiz/ActiveQuiz.js","components/Ui/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/Ui/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/Ui/Input/Input.js","components/Ui/Select/Select.js","store/actions/create.js","validators/validators.js","containers/QuizCreator/QuizCreator.js","store/actions/auth.js","containers/Auth/Auth.js","containers/Registration/Registration.js","App.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["MenuToggle","props","cls","isOpen","push","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","Fragment","map","link","index","key","activeClassName","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","this","children","Component","AnswerList","useState","typeAnswer","setTypeAnswer","WrongAnswerClass","setWrongAnswerClass","useEffect","answers","answer","text","id","answerId","onAnswerClick","answerNumber","quizLength","ActiveQuiz","style","height","length","question","Button","type","extraClass","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","onRetry","Loader","axios","create","baseURL","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","connect","isFinished","activeQuestion","loading","fetchQuizById","quizId","dispatch","a","async","get","response","data","quizAnswerClick","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","retryQuiz","match","params","fetchQuizes","forEach","name","Input","input","meta","inputType","htmlFor","Math","random","value","touched","color","Select","createQuizQuestion","item","required","validateEmail","email","test","String","toLowerCase","minLength8","QuizCreatorFormContainer","reduxForm","form","finishCreateQuiz","numberOfAnswers","setNumberOfAnswers","typeRequest","setTypeRequest","successAddTest","setSuccessAddTest","destroy","onSubmit","handleSubmit","Field","component","validate","arrayWithAnswer","i","renderInputAnswers","arrayWithOption","renderOptionsSelect","display","flexWrap","preventDefault","addAnswerHandler","array","pop","deleteAnswerHandler","post","setData","formData","newFormData","slice","deleteField","unregisterField","autoLogout","time","localStorage","removeItem","AuthReduxForm","auth","password","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","token","console","log","RegistrationReduxForm","Registration","App","path","Auth","QuizCreator","Quiz","QuizList","initialState","combineReducers","action","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f8ca6a6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './MenuToggle.css'\r\n\r\nconst MenuToggle = props => {\r\n\tconst cls = [\r\n\t\t'MenuToggle','fa'\r\n\t]\r\n\r\n\tif (props.isOpen) {\r\n\t\tcls.push('fa-times')\r\n\t\tcls.push('open')\r\n\t} else {\r\n\t\tcls.push('fa-bars')\r\n\t}\r\n\treturn (\r\n\t\t<i \r\n\t\t\tclassName={cls.join(' ')}\r\n\t\t\tonClick = {props.onToggle}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = props => <div className=\"Backdrop\" onClick={props.onClick} />\r\n\r\nexport default Backdrop","import React, {Component} from 'react'\r\nimport './Drawer.css'\r\nimport Backdrop from '../../Ui/Backdrop/Backdrop'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst links = [\r\n    {to: '/', label: 'Список', exact: true},\r\n    {to: '/auth', label: 'Авторизация', exact: false},\r\n    {to: '/quiz-creator', label: 'Создать тест', exact: false}\r\n\r\n]\r\n\r\nconst Drawer = (props) => {\r\n\r\n    function clickHandler() {\r\n        props.onClose()\r\n    }\r\n\r\n    function renderLinks() {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={'page-active'}\r\n                        onClick={clickHandler}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    const cls = ['Drawer']\r\n    if (!props.isOpen) {\r\n        cls.push('close')\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <nav className={cls.join(' ')}>\r\n                <ul>\r\n                    {renderLinks()}\r\n                </ul>\r\n            </nav>\r\n            {props.isOpen ? <Backdrop onClick={props.onClose}/> : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react'\r\nimport './Layout.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\n\r\nclass Layout extends Component {\r\n\tstate = {\r\n\t\tmenu: false\r\n\t}\r\n\r\n\ttoggleMenuHandler = () => {\r\n\t\tthis.setState({\r\n\t\t\tmenu: !this.state.menu\r\n\t\t})\r\n\t}\r\n\tmenuCloseHandler = () => {\r\n\t\tthis.setState({\r\n\t\t\tmenu: false\r\n\t\t})\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'Layout'}>\r\n\t\t\t<Drawer \r\n\t\t\t\tisOpen={this.state.menu}\r\n\t\t\t\tonClose={this.menuCloseHandler}\r\n\t\t\t/>\r\n\t\t\t<MenuToggle \r\n\t\t\t\tonToggle={this.toggleMenuHandler}\r\n\t\t\t\tisOpen={this.state.menu}\r\n\t\t\t/>\r\n\t\t\t<main>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Layout","import React, {useEffect, useState} from 'react'\r\n\r\nconst AnswerList = (props) => {\r\n  let [typeAnswer, setTypeAnswer] = useState(null)\r\n  let [WrongAnswerClass, setWrongAnswerClass] = useState('wrong_answer')\r\n  const checkAnswer = (answerId) => {\r\n    setTypeAnswer(answerId)\r\n  }\r\n  const removeClass = () => {\r\n    setWrongAnswerClass('')\r\n  }\r\n  useEffect(() => {\r\n    setWrongAnswerClass('wrong_answer')\r\n  }, [WrongAnswerClass])\r\n    return (\r\n\t<div className=\"demo__elems\">\r\n\t\t{props.answers.map((answer, index) => {\r\n\t\t\treturn(\r\n\t\t\t\t<div className={\"demo__elem demo__elem-\" + (index + 1)} key={index}>{answer.text}</div>\r\n\t\t\t)\r\n\t\t})}\r\n\t\t{props.answers.map((answer, index) => {\r\n\t\t\treturn(\r\n\t\t\t\t<span className={'demo__hover demo__hover-' + (answer.id)} onClick={() => {\r\n          props.onAnswerClick(+answer.id)\r\n          checkAnswer(+answer.id)\r\n          removeClass()}\r\n        }\r\n        key={answer.id}>\r\n        </span>\r\n\t\t\t)\r\n\t\t})}\r\n\t\t<div className=\"demo__highlighter\">\r\n        \t<div className=\"demo__elems\">\r\n        \t{props.answers.map((answer, index) => {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<div className='demo__elem' key={index}>{answer.text}</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n        \t</div>\r\n        </div>\r\n        <div className=\"demo__examples\">\r\n        <p>{props.answerNumber} из { props.quizLength }</p>\r\n        <div className=\"demo__examples-nb\">\r\n          <div className=\"nb-inner\">\r\n          { props.state != null ?\r\n            props.state[typeAnswer] === 'error' ? <div className={WrongAnswerClass}>Неправильно</div> :\r\n            <div className=\"right_answer\">Верно</div>\r\n             : null\r\n          }\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\t</div>\r\n  )\r\n}\r\nexport default AnswerList","import React from 'react'\r\nimport './ActiveQuiz.scss'\r\nimport AnswerList from './AnswerList/AnswerList'\r\n\r\nconst ActiveQuiz = props => {\r\n\treturn (\r\n\t<div className=\"demo\" style={{height: 29 + (props.answers.length * 7) + 'rem'}}>\r\n\t\t<div className=\"demo__content\">\r\n\t\t\t<h2 className=\"demo__heading\">{props.answerNumber + '. '}{props.question} </h2>\r\n\r\n\t\t\t<AnswerList \r\n\t\t\t\tanswers={props.answers}\r\n\t\t\t\tonAnswerClick={props.onAnswerClick}\r\n\t\t\t\tstate={props.state}\r\n\t\t\t\tquizLength={props.quizLength}\r\n\t\t\t\tanswerNumber={props.answerNumber}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default ActiveQuiz","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = props => {\r\n\tconst cls = ['Button', props.type]\r\n\tif (props.extraClass) {\r\n\t\tcls.push(props.extraClass)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button onClick={props.onClick}\r\n\t\tclassName={cls.join(' ')}\r\n\t\tdisabled = {props.disabled}>\r\n\t\t\t{props.children}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './FinishedQuiz.css'\r\nimport {Link} from 'react-router-dom'\r\nimport Button from \"../Ui/Button/Button\";\r\n\r\nconst FinishedQuiz = props => {\r\n\tconst successCount = Object.keys(props.results).reduce((total, key) => {\r\n\t\tif (props.results[key] === 'success') {\r\n\t\t\ttotal++\r\n\t\t}\r\n\t\treturn total\r\n\t}, 0)\r\n\treturn (\r\n\t\t<div className={'FinishedQuiz'}>\r\n\t\t\t<ul>\r\n\t\t\t{ props.quiz.map((quizItem, index) => {\r\n\t\t\t\tconst cls = [\r\n\t\t\t\t\t'fa',\r\n\t\t\t\t\tprops.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check'\r\n\t\t\t\t]\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t<strong>{index + 1 + '. '} </strong>\r\n\t\t\t\t\t\t{quizItem.question}\r\n\t\t\t\t\t\t<i className={cls.join(' ')}></i>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t)\r\n\t\t\t})} \r\n\t\t\t</ul>\r\n\r\n\t\t\t<p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<Button onClick={props.onRetry} type={'primary'}>Повторить</Button>\r\n\t\t\t\t<Link to={'/'}>\r\n\t\t\t\t\t<Button type={'success'}>Перейти в список тестов</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = props => {\r\n\treturn (\r\n\t\t<div className=\"lds-dual-ring\"></div>\r\n\t)\r\n}\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://my-app-705e8.firebaseio.com/'\r\n})","import axios from '../../axios/axios-quiz'\r\nimport {FETCH_QUIZES_START,\r\n\t\tFETCH_QUIZES_SUCCESS,\r\n \t\tFETCH_QUIZES_ERROR,\r\n \t\tFETCH_QUIZ_SUCCESS,\r\n   \t\tQUIZ_SET_STATE,\r\n   \t\tFINISHED_QUIZ,\r\n   \t\tQUIZ_RETRY,\r\n   \t\tQUIZ_NEXT_QUESTION} from './actionTypes'\r\n\r\nexport function fetchQuizes() {\r\n\treturn async dispatch => {\r\n\t\tdispatch(fetchQuizesStart())\r\n\t\t try {\r\n\t\t\tconst response = await axios.get('quizes.json')\r\n\t\t\tconst quizes = []\r\n\t\t\tObject.keys(response.data).forEach((key, index) => {\r\n\t\t\t\tquizes.push({\r\n\t\t\t\t\tid: key,\r\n\t\t\t\t\tname: `Тест ${index + 1}`\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tdispatch(fetchQuizesSuccess(quizes))\r\n\t\t} catch (e) {\r\n\t\t\tdispatch(fetchQuizesError(e))\r\n\t\t}\r\n\t\t\r\n\t} \r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n\treturn async dispatch => {\r\n\t\tdispatch(fetchQuizesStart())\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(`/quizes/${quizId}.json`)\r\n\t\t\tconst quiz = response.data\r\n\r\n\t\t\tdispatch(fetchQuizSuccess(quiz))\r\n\t\t} catch(e) {\r\n\t\t\tdispatch(fetchQuizesError(e))\r\n\t\t}\r\n\t}\r\n}\r\nexport function fetchQuizSuccess(quiz) {\r\n\treturn {\r\n\t\ttype: FETCH_QUIZ_SUCCESS,\r\n\t\tquiz\r\n\t}\r\n}\r\nexport function fetchQuizesStart() {\r\n\treturn {\r\n\t\ttype: FETCH_QUIZES_START\r\n\t}\r\n}\r\nexport function fetchQuizesSuccess(quizes) {\r\n\treturn {\r\n\t\ttype: FETCH_QUIZES_SUCCESS,\r\n\t\tquizes\r\n\t}\r\n}\r\nexport function fetchQuizesError(e) {\r\n\treturn {\r\n\t\ttype: FETCH_QUIZES_ERROR,\r\n\t\terror: e\r\n\t}\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n\treturn {\r\n\t\ttype: QUIZ_SET_STATE,\r\n\t\tanswerState, results\r\n\t}\r\n}\r\n\r\nexport function finishQuiz() {\r\n\treturn {\r\n\t\ttype: FINISHED_QUIZ\r\n\t}\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n\treturn {\r\n\t\ttype: QUIZ_NEXT_QUESTION,\r\n\t\tnumber\r\n\t}\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n\treturn (dispatch, getState) => {\r\n\r\n\t\tconst state = getState().quiz\r\n\t\tif (state.answerState) {\r\n\t\t\tconst key = Object.keys(state.answerState)[0]\r\n\t\t\tif (state.answerState[key] === 'success') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst question = state.quiz[state.activeQuestion]\r\n\t\tconst results = state.results\r\n\r\n\t\tif (question.rightAnswerId === answerId) {\r\n\t\t\t\tif (!results[question.id]) {\r\n\t\t\t\t\tresults[question.id] = 'success'\r\n\t\t\t\t}\t\t\r\n\t\t\tdispatch(quizSetState({[answerId]: 'success'}, results))\r\n\t\t\tconst timeout = window.setTimeout(() => {\r\n\r\n\t\t\t\tif (isQuizFinished(state)) {\r\n\t\t\t\t\tdispatch(finishQuiz())\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch(quizNextQuestion(state.activeQuestion + 1))\r\n\t\t\t\t}\r\n\r\n\t\t\t\twindow.clearTimeout(timeout)\r\n\t\t\t}, 3000)\r\n\r\n\t\t} else {\r\n\t\t\tresults[question.id] = 'error'\r\n\t\t\tdispatch(quizSetState({[answerId]: 'error'}, results))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n\treturn state.activeQuestion + 1 === state.quiz.length\r\n}\r\n\r\nexport function retryQuiz() {\r\n\treturn {\r\n\t\ttype: QUIZ_RETRY\r\n\t}\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISHED_QUIZ = 'FINISHED_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\nexport const FETCH_QUIZES_START_TEST = 'FETCH_QUIZES_START_TEST'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React, {useEffect} from 'react'\r\nimport './Quiz.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport Loader from '../../components/Ui/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\r\n\r\nconst Quiz = (props) => {\r\n    useEffect(() => {\r\n        props.fetchQuizById(props.match.params.id)\r\n        return function retryQuiz() {\r\n            props.retryQuiz()\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"Quiz\">\r\n            <div className={'QuizWrapper'}>\r\n                <h1>Ответьте на вопросы</h1>\r\n                {\r\n                    props.loading || !props.quiz ? <Loader/> :\r\n                        props.isFinished ? <FinishedQuiz\r\n                                results={props.results}\r\n                                quiz={props.quiz}\r\n                                onRetry={props.retryQuiz}\r\n                            /> :\r\n                            <ActiveQuiz answers={props.quiz[props.activeQuestion].answers}\r\n                                        question={props.quiz[props.activeQuestion].question}\r\n                                        onAnswerClick={props.quizAnswerClick}\r\n                                        quizLength={props.quiz.length}\r\n                                        answerNumber={props.activeQuestion + 1}\r\n                                        state={props.answerState}\r\n                            />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchQuizById, quizAnswerClick, retryQuiz})(Quiz)","import React, {useEffect} from 'react'\r\nimport './QuizList.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../components/Ui/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\n\r\nconst QuizList = (props) => {\r\n\r\n    function renderQuizes() {\r\n        return props.quizes.map((quiz) => {\r\n            return (\r\n                <li key={quiz.id}>\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchQuizes()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='QuizList'>\r\n            <h1>Список тестов</h1>\r\n            {\r\n                props.loading && props.quizes.length !== 0 ? <Loader/> :\r\n                    <ul>\r\n                        {renderQuizes()}\r\n                    </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchQuizes})(QuizList)","import React from 'react'\r\nimport './Input.css'\r\n\r\nconst Input = ({input, meta, ...props}) => {\r\n\tconst inputType = props.type || 'text'\r\n\tconst cls = ['Input']\r\n\tconst htmlFor = `${inputType}-${Math.random()}`\r\n\treturn (\r\n\t\t<div className={cls.join(' ')}>\r\n\t\t\t<label htmlFor={htmlFor}>{props.label}</label>\r\n\t\t\t<input\r\n\t\t\t\ttype={inputType}\r\n\t\t\t\tid={htmlFor}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\t{...props} {...input}\r\n\t\t\t/>\r\n\t\t\t{meta.error && meta.touched ? <span style={{color: 'red'}}>{meta.error}</span> : null}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport './Select.css'\r\n\r\nconst Select = ({input, meta, ...props}) => {\r\n\treturn (\r\n\t\t<div className=\"Select\">\r\n\t\t\t<label htmlFor=\"htmlFor\">{props.label}</label>\r\n\t\t\t<select {...props} {...input}>{props.children}</select>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Select","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION, FETCH_QUIZES_START_TEST} from './actionTypes'\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nexport function createQuizQuestion(item) {\r\n\treturn {\r\n\t\ttype: CREATE_QUIZ_QUESTION,\r\n\t\titem\r\n\t}\r\n}\r\nexport function resetQuizCreation() {\r\n\treturn {\r\n\t\ttype: RESET_QUIZ_CREATION\r\n\t}\r\n}\r\n\r\nexport function fetchQuizesStartTest() {\r\n\treturn {\r\n\t\ttype: FETCH_QUIZES_START_TEST\r\n\t}\r\n}\r\nexport function finishCreateQuiz(item) {\r\n\treturn async (dispatch, getState) => {\r\n\t\tdispatch(fetchQuizesStartTest())\r\n\t\tdispatch(createQuizQuestion(item))\r\n\t\tawait axios.post('quizes.json', getState().create.quiz)\r\n\t\tdispatch(resetQuizCreation())\r\n\t}\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"This field is required\\n\"\r\n}\r\n\r\nexport const validateEmail = email => {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!re.test(String(email).toLowerCase())) return 'Please enter a valid email';\r\n}\r\nexport const checked = value => {\r\n    if (!value) return 'accept the terms of use'\r\n}\r\nexport const minLength8 = value => {\r\n    if (value.length < 8) return 'there must be at least 8 characters\\n'\r\n}","import React, {useEffect, useState} from 'react'\r\nimport './QuizCreator.css'\r\nimport Button from '../../components/Ui/Button/Button'\r\nimport Input from '../../components/Ui/Input/Input'\r\nimport Select from '../../components/Ui/Select/Select'\r\nimport {connect} from 'react-redux'\r\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create'\r\nimport Loader from '../../components/Ui/Loader/Loader'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {required} from \"../../validators/validators\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst QuizCreatorBefore = ({createQuizQuestion, finishCreateQuiz, ...props}) => {\r\n    let [numberOfAnswers, setNumberOfAnswers] = useState(2)\r\n    let [typeRequest, setTypeRequest] = useState(null)\r\n    let [successAddTest, setSuccessAddTest] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (typeRequest === 'add' && props.data) {\r\n            createQuizQuestion(props.data)\r\n            props.destroy('quizCreator')\r\n            setNumberOfAnswers(2)\r\n        }\r\n        if (typeRequest === 'create' && props.data) {\r\n            finishCreateQuiz(props.data)\r\n            props.destroy('quizCreator')\r\n            setSuccessAddTest(true)\r\n        }\r\n        setTypeRequest(null)\r\n    }, [props.data])\r\n\r\n    function addAnswerHandler(e) {\r\n        e.preventDefault()\r\n        if (numberOfAnswers === 7) {return} // maximum number of answers\r\n        setNumberOfAnswers(+numberOfAnswers + 1)\r\n    }\r\n\r\n    function deleteAnswerHandler(e) {\r\n        e.preventDefault()\r\n        if (numberOfAnswers === 2) {return} // minimum number of answers\r\n        setNumberOfAnswers(+numberOfAnswers - 1)\r\n        props.array.pop('Answer' + numberOfAnswers)\r\n        props.array.pop('Answer' + numberOfAnswers)\r\n    }\r\n\r\n    function addQuestionHandler() {\r\n        setTypeRequest('add')\r\n    }\r\n\r\n    function createQuizHandler() {\r\n        setTypeRequest('create')\r\n    }\r\n\r\n    function renderInputAnswers() {\r\n        let arrayWithAnswer = []\r\n        for (let i = 1; i <= numberOfAnswers; i++) {\r\n            arrayWithAnswer.push(i)\r\n        }\r\n        return arrayWithAnswer.map((item) => {\r\n            return (\r\n                <Field key={item} label={\"Введите вариант ответа\"} component={Input} name={\"Answer\" + item}\r\n                       validate={required}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderOptionsSelect() {\r\n        let arrayWithOption = []\r\n        for (let i = 1; i <= numberOfAnswers; i++) {\r\n            arrayWithOption.push(i)\r\n        }\r\n        return arrayWithOption.map((item) => {\r\n            return (\r\n                <option key={item} value={item}>{item}</option>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <div className='QuizCreator'>\r\n            {!props.loading ?\r\n                successAddTest !== true ?\r\n            <div>\r\n                <h1>Создайте тест</h1>\r\n\r\n                    <form onSubmit={props.handleSubmit}>\r\n\r\n                        <Field label={\"Введите вопрос\"} component={Input} name={\"question\"} validate={required}/>\r\n\r\n                        {renderInputAnswers()}\r\n\r\n                        <Field name={'rightAnswerId'} component={Select}>\r\n                            {renderOptionsSelect()}\r\n                        </Field>\r\n                        <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                            <Button type=\"primary\" onClick={(e) => addAnswerHandler(e)}>\r\n                                Добавить ответ\r\n                            </Button>\r\n                            <Button type=\"error\" onClick={(e) => deleteAnswerHandler(e)}>\r\n                                Удалить ответ\r\n                            </Button>\r\n                            <Button type=\"primary\" onClick={addQuestionHandler}>\r\n                                Добавить вопрос в тест\r\n                            </Button>\r\n                            <Button type=\"success\" onClick={createQuizHandler}>\r\n                                Создать тест\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n                    : <div>\r\n                        <h1>Тест успешно загружен</h1>\r\n                        <NavLink to={'/'}> <Button type={'primary'} extraClass={'button_go_to_test_list'}>Перейти к списку тестов</Button></NavLink>\r\n                </div>\r\n                : <Loader/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst QuizCreatorFormContainer = reduxForm({\r\n    form: 'quizCreator'\r\n})(QuizCreatorBefore)\r\n\r\nconst QuizCreator = (props) => {\r\n    let [data, setData] = useState(null)\r\n    const onSubmit = (formData) => {\r\n        let newFormData = {}\r\n        newFormData.answers = []\r\n        for (let item in formData) {\r\n            if (typeof formData[item] === 'string') {\r\n            \tswitch(item) {\r\n\t\t\t\t\tcase 'question':\r\n\t\t\t\t\t\tnewFormData[item] = formData[item]\r\n\t\t\t\t\tcase 'rightAnswerId':\r\n\t\t\t\t\t\tnewFormData[item] = +formData[item]\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tlet id = item.slice(-1)\r\n\t\t\t\t\t\tnewFormData.answers.push({id: id, text: formData[item]})\r\n\t\t\t\t}\r\n            }\r\n        }\r\n        newFormData.id = props.quiz.length + 1\r\n        if (!newFormData.rightAnswerId) {\r\n            newFormData.rightAnswerId = 1\r\n        }\r\n        setData(newFormData)\r\n    }\r\n    return <QuizCreatorFormContainer onSubmit={onSubmit} deleteField={props.unregisterField} data={data} {...props}/>\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz,\r\n        loading: state.create.loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {createQuizQuestion, finishCreateQuiz})(QuizCreator)","import axios from \"axios\";\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email, password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD-lWmZ3iqeNklfmnRz45QFgZApwcv0Lg4'\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD-lWmZ3iqeNklfmnRz45QFgZApwcv0Lg4'\r\n        }\r\n        const response = await axios.post(url, authData)\r\n        const data = response.data\r\n\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(autoLogout(data.expiresIn))\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time*1000)\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}","import React from 'react'\r\nimport './Auth.css'\r\nimport Button from '../../components/Ui/Button/Button'\r\nimport Input from '../../components/Ui/Input/Input'\r\nimport {connect} from \"react-redux\";\r\nimport {auth} from \"../../store/actions/auth\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {minLength8, required, validateEmail} from \"../../validators/validators\";\r\n\r\nconst AuthBefore = (props) => {\r\n    return (\r\n        <div className='Auth'>\r\n            <div>\r\n                <h1>Авторизация</h1>\r\n                <form className=\"AuthForm\" onSubmit={props.handleSubmit}>\r\n                    <Field type={\"text\"} label={\"email\"} name={'email'} component={Input} validate={[required, validateEmail]}></Field>\r\n                    <Field type={\"password\"} label={\"password\"} name={'password'} component={Input} validate={[required, minLength8]}></Field>\r\n                    <div className={'formDescription'}>if you don’t have an account, you can create one <NavLink to={'/registration'}>here</NavLink></div>\r\n                    <Button type=\"success\">Войти</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AuthReduxForm = reduxForm({\r\n    form: 'auth'\r\n})(AuthBefore)\r\n\r\nconst Auth = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n    }\r\n    return <AuthReduxForm onSubmit={onSubmit}/>\r\n}\r\n\r\nexport default connect(null, {auth})(Auth)","import React from 'react'\r\nimport './Registration.css'\r\nimport Button from '../../components/Ui/Button/Button'\r\nimport Input from '../../components/Ui/Input/Input'\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {minLength8, required, validateEmail} from \"../../validators/validators\";\r\n\r\nconst RegistrationBefore = (props) => {\r\n    return (\r\n        <div className='Registration'>\r\n            <div>\r\n                <h1>Регистрация</h1>\r\n                <form className=\"RegistrationForm\" onSubmit={props.handleSubmit}>\r\n                    <Field type={\"text\"} label={\"first name\"} name={'first_name'} component={Input} validate={required}></Field>\r\n                    <Field type={\"text\"} label={\"second_name\"} name={'second_name'} component={Input} validate={required}></Field>\r\n                    <Field type={\"text\"} label={\"email\"} name={'email'} component={Input} validate={[required, validateEmail]}></Field>\r\n                    <Field type={\"password\"} label={\"password\"} name={'password'} component={Input} validate={[required, minLength8]}></Field>\r\n                    <Field type={\"password\"} label={\"repeat your password\"} name={'password_repeat'} component={Input} validate={[required, minLength8]}></Field>\r\n                    <div className={'formDescription'}>if you already have an account, you can log in <NavLink to={'/auth'}>here</NavLink></div>\r\n                    <Button type=\"primary\">Регистрация</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst RegistrationReduxForm = reduxForm({\r\n    form: 'registration'\r\n})(RegistrationBefore)\r\n\r\nconst Registration = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n    }\r\n    return <RegistrationReduxForm onSubmit={onSubmit}/>\r\n}\r\nexport default Registration","import React from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport Quiz from './containers/Quiz/Quiz'\nimport {Route, Switch} from 'react-router-dom'\nimport QuizList from './containers/QuizList/QuizList'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport Auth from './containers/Auth/Auth'\nimport Registration from \"./containers/Registration/Registration\";\n\nfunction App() {\n    return (\n        <Layout>\n            <Switch>\n                <Route path='/auth' component={Auth}/>\n                <Route path='/registration' component={Registration}/>\n                <Route path='/quiz-creator' component={QuizCreator}/>\n                <Route path='/quiz/:id' component={Quiz}/>\n                <Route path='/' exact component={QuizList}/>\n            </Switch>\n        </Layout>\n    );\n}\n\nexport default App;\n","import {\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZ_SUCCESS,\r\n    QUIZ_SET_STATE,\r\n    FINISHED_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZ_RETRY\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {}, // {[id]: success error}\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null, // {[id]: success error}\r\n    quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, answerState: action.answerState, results: action.results\r\n            }\r\n        case FINISHED_QUIZ:\r\n            return {\r\n                ...state, isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state, answerState: null, activeQuestion: action.number\r\n            }\r\n        case QUIZ_RETRY:\r\n            return {\r\n                ...state,\r\n                activeQuestion: 0,\r\n                answerState: null,\r\n                isFinished: false,\r\n                results: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n\tCREATE_QUIZ_QUESTION,\r\n\tRESET_QUIZ_CREATION,\r\n\tFETCH_QUIZES_START_TEST\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n\tquiz: [],\r\n\tloading: false\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase CREATE_QUIZ_QUESTION:\r\n\t\t\treturn {\r\n\t\t\t\t...state, quiz: [...state.quiz, action.item]\r\n\t\t\t}\r\n\t\tcase RESET_QUIZ_CREATION:\r\n\t\t\treturn\t{\r\n\t\t\t\t...state, loading: false, quiz: []\r\n\t\t\t}\r\n\t\tcase FETCH_QUIZES_START_TEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading: true\r\n\t\t\t}\r\n\t\tdefault: \r\n\t\t\treturn state\r\n\t}\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state, token: null\r\n            }\r\n        case AUTH_SUCCESS:\r\n            return {...state, token: action.token}\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from './create'\r\nimport authReducer from \"./auth\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nexport default combineReducers({\r\n\tquiz: quizReducer,\r\n\tcreate: createReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <div>\n                <App/>\n            </div>\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(<div>{app}</div>, document.getElementById('root'));\n"],"sourceRoot":""}